import Head from "next/head"
import { client } from "../../../libs/client"
import styles from "../../../styles/post.module.scss"
import BlogHeader from "../../components/sections/BlogHeader"
import Footer from "../../components/sections/Footer"

type Article = {
  body: string
  createdAt: string
  id: string
  publishedAt: string
  revisedAt: string
  title: string
  updatedAt: string
}

type Contents = {
  contents: Article[]
}

const BlogId = ({
  blog,
}: {
  blog: { id: string; title: string; createdAt: string; body: string }
}) => {
  console.log(blog)
  return (
    <>
      <Head>
        <title>{blog.title}</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <BlogHeader />
      <div className='mx-auto mb-20 max-w-screen-xl min-h-90'>
        <div className=' mx-6 md:mx-auto max-w-screen-md'>
          <main className=' text-left'>
            <h1 className='text-3xl font-bold'>{blog.title}</h1>
            <p className='py-3 text-sm text-gray-400'>
              {new Date(blog.createdAt).toLocaleDateString()}
            </p>
            <div
              className={styles.post}
              dangerouslySetInnerHTML={{
                __html: `${blog.body}`,
              }}
            />
          </main>
        </div>
      </div>
      <Footer />
    </>
  )
}

// 静的生成のためのパスを指定します
export const getStaticPaths = async () => {
  const data: Contents = await client.get({ endpoint: "blog" })

  console.log(data)
  const paths = data.contents.map((content) => `/blog/${content.id}`)
  return { paths, fallback: false }
}

// データをテンプレートに受け渡す部分の処理を記述します
export const getStaticProps = async (context: any) => {
  const id = context.params.id
  const data: Contents = await client.get({ endpoint: "blog", contentId: id })

  console.log(data)

  return {
    props: {
      blog: data,
    },
  }
}

export default BlogId
